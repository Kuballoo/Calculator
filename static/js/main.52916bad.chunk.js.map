{"version":3,"sources":["Option.js","index.js"],"names":["Option","props","className","onClick","click","name","type","onKeyPress","e","keyDown","operationType","x","y","prevT","parseFloat","parseInt","error","num1","num2","prevType","numBreak","Calculator","handleOption","symbol","state","value","content","value2","setState","slice","handleKeyPress","key","console","log","readOnly","this","id","map","item","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.52916bad.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Option = (props) => {\r\n  const style = {\r\n    backgroundColor: \"darkgray\",\r\n  };\r\n  return (\r\n    <button\r\n      className=\"option\"\r\n      onClick={() => props.click(props.name, props.type)}\r\n      onKeyPress={(e) => props.keyDown(e, props.name, props.type)}\r\n    >\r\n      {props.name}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Option;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Option from \"./Option.js\";\n\nimport \"./style.css\";\n\nconst operationType = (x, y, prevT) => {\n  const precision = 100000000;\n  switch (prevT) {\n    case \"+\":\n      return parseFloat(parseInt((x + y) * precision)) / precision;\n    case \"-\":\n      return parseFloat(parseInt((y - x) * precision)) / precision;\n    case \"/\":\n      if (x !== 0) return parseFloat(parseInt((y / x) * precision)) / precision;\n      else {\n        error = true;\n        return \"Nie dziel przez zero!\";\n      }\n    case \"x\":\n      return parseFloat(parseInt(x * y * precision)) / precision;\n    default:\n      break;\n  }\n};\n\nlet num1 = 0;\nlet num2 = 0;\nlet prevType = \"\";\nlet error = false;\nlet numBreak = false;\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      value2: \"\",\n    };\n  }\n  handleOption = (symbol, type) => {\n    const { value, value2 } = this.state;\n    var content = value;\n    if (error) {\n      this.setState({ value2: \"\" });\n      error = false;\n    }\n    if (prevType === \"=\") {\n      if (type === \"operation\" && symbol !== \"=\") {\n        num2 = num1;\n        num1 = 0;\n        this.setState({ value2: num2 + \" \" + symbol, value: \"\" });\n        numBreak = false;\n        prevType = symbol;\n      } else {\n        this.setState({ value: \"\", value2: \"\" });\n        num1 = 0;\n        num2 = 0;\n        numBreak = false;\n        prevType = \"\";\n        return;\n      }\n    }\n    if (symbol === \"CE\") {\n      this.setState({ value: \"\" });\n      num1 = 0;\n      numBreak = false;\n    } else if (symbol === \"C\") {\n      this.setState({ value: \"\", value2: \"\" });\n      num1 = 0;\n      num2 = 0;\n      numBreak = false;\n    } else if (symbol === \"<-\") {\n      content = content.slice(0, -1);\n      this.setState({ value: content });\n      if (content === \"\") numBreak = false;\n    } else if (\n      (symbol === \"/\" || symbol === \"x\" || symbol === \"-\" || symbol === \"+\") &&\n      numBreak\n    ) {\n      if (num2) {\n        num1 = parseFloat(value);\n        num2 = operationType(num1, num2, prevType);\n        if (error) {\n          this.setState({ value2: num2, value: \"\" });\n          num1 = 0;\n          num2 = 0;\n          numBreak = false;\n        } else {\n          this.setState({ value2: num2 + \" \" + symbol, value: \"\" });\n          num1 = 0;\n        }\n      } else {\n        num2 = parseFloat(value);\n        this.setState({ value2: num2 + \" \" + symbol, value: \"\" });\n      }\n      prevType = symbol;\n      numBreak = false;\n    } else if (type === \"number\" || type === \"dot\") {\n      if (type !== \"dot\") numBreak = true;\n      this.setState({ value: value + symbol });\n    } else if (symbol === \"+/-\" && content && numBreak) {\n      this.setState({ value: -value });\n    } else if (symbol === \"=\" && content && numBreak && num2) {\n      num1 = parseFloat(value);\n      if (num1 < 0) content = `${num2} ${prevType} (${num1}) =`;\n      else content = `${num2} ${prevType} ${num1} =`;\n\n      num1 = operationType(num1, num2, prevType);\n      if (error) {\n        this.setState({ value2: num1, value: \"\" });\n        num1 = 0;\n        num2 = 0;\n        numBreak = false;\n      } else this.setState({ value: num1, value2: content });\n\n      prevType = symbol;\n      numBreak = false;\n    }\n  };\n\n  handleKeyPress = (e, symbol, type) => {\n    switch (e.key) {\n      case \"0\":\n        this.handleOption(\"0\", \"number\");\n        break;\n      case \"1\":\n        this.handleOption(\"1\", \"number\");\n        break;\n      case \"2\":\n        this.handleOption(\"2\", \"number\");\n        break;\n      case \"3\":\n        this.handleOption(\"3\", \"number\");\n        break;\n      case \"4\":\n        this.handleOption(\"4\", \"number\");\n        break;\n      case \"5\":\n        this.handleOption(\"5\", \"number\");\n        break;\n      case \"6\":\n        this.handleOption(\"6\", \"number\");\n        break;\n      case \"7\":\n        this.handleOption(\"7\", \"number\");\n        break;\n      case \"8\":\n        this.handleOption(\"8\", \"number\");\n        break;\n      case \"9\":\n        this.handleOption(\"9\", \"number\");\n        break;\n      case \"d\":\n        this.handleOption(\"<-\", \"clear\");\n        break;\n      case \"c\":\n        this.handleOption(\"CE\", \"clear\");\n        break;\n      case \"C\":\n        this.handleOption(\"C\", \"clear\");\n        break;\n      case \"f\":\n        this.handleOption(\"+/-\", \"other\");\n        break;\n      case \"=\":\n        this.handleOption(\"=\", \"operation\");\n        console.log(\"this should working\");\n        break;\n      case \",\":\n        this.handleOption(\".\", \"dot\");\n        break;\n      case \"/\":\n        this.handleOption(\"/\", \"operation\");\n        break;\n      case \"*\":\n        this.handleOption(\"x\", \"operation\");\n        break;\n      case \"-\":\n        this.handleOption(\"-\", \"operation\");\n        break;\n      case \"+\":\n        this.handleOption(\"+\", \"operation\");\n        break;\n    }\n  };\n\n  render() {\n    const itemsInf = [\n      { name: \"CE\", id: 0, type: \"clear\" },\n      { name: \"C\", id: 1, type: \"clear\" },\n      { name: \"<-\", id: 2, type: \"clear\" },\n      { name: \"/\", id: 3, type: \"operation\" },\n      { name: \"7\", id: 4, type: \"number\" },\n      { name: \"8\", id: 5, type: \"number\" },\n      { name: \"9\", id: 6, type: \"number\" },\n      { name: \"x\", id: 7, type: \"operation\" },\n      { name: \"4\", id: 8, type: \"number\" },\n      { name: \"5\", id: 9, type: \"number\" },\n      { name: \"6\", id: 10, type: \"number\" },\n      { name: \"-\", id: 11, type: \"operation\" },\n      { name: \"1\", id: 12, type: \"number\" },\n      { name: \"2\", id: 13, type: \"number\" },\n      { name: \"3\", id: 14, type: \"number\" },\n      { name: \"+\", id: 15, type: \"operation\" },\n      { name: \"+/-\", id: 16, type: \"another\" },\n      { name: \"0\", id: 17, type: \"number\" },\n      { name: \".\", id: 18, type: \"dot\" },\n      { name: \"=\", id: 19, type: \"operation\" },\n    ];\n    return (\n      <div className=\"calcContainer\">\n        <input\n          type=\"text\"\n          className=\"display2\"\n          readOnly={true}\n          value={this.state.value2}\n        />\n        <input\n          type=\"text\"\n          className=\"display\"\n          readOnly={true}\n          value={this.state.value}\n        />\n        {itemsInf.map((item) => (\n          <Option\n            name={item.name}\n            type={item.type}\n            key={item.id}\n            click={this.handleOption}\n            keyDown={this.handleKeyPress}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Calculator />, document.getElementById(\"root\"));\n"],"sourceRoot":""}